{"ast":null,"code":"import { presetPrimaryColors } from '@ant-design/colors';\nimport warning from '../_util/warning';\nexport function validProgress(progress) {\n  if (!progress || progress < 0) {\n    return 0;\n  }\n  if (progress > 100) {\n    return 100;\n  }\n  return progress;\n}\nexport function getSuccessPercent(_ref) {\n  var success = _ref.success,\n    successPercent = _ref.successPercent;\n  var percent = successPercent;\n  /** @deprecated Use `percent` instead */\n  if (success && 'progress' in success) {\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'Progress', '`success.progress` is deprecated. Please use `success.percent` instead.') : void 0;\n    percent = success.progress;\n  }\n  if (success && 'percent' in success) {\n    percent = success.percent;\n  }\n  return percent;\n}\nexport var getPercentage = function getPercentage(_ref2) {\n  var percent = _ref2.percent,\n    success = _ref2.success,\n    successPercent = _ref2.successPercent;\n  var realSuccessPercent = validProgress(getSuccessPercent({\n    success: success,\n    successPercent: successPercent\n  }));\n  return [realSuccessPercent, validProgress(validProgress(percent) - realSuccessPercent)];\n};\nexport var getStrokeColor = function getStrokeColor(_ref3) {\n  var _ref3$success = _ref3.success,\n    success = _ref3$success === void 0 ? {} : _ref3$success,\n    strokeColor = _ref3.strokeColor;\n  var successColor = success.strokeColor;\n  return [successColor || presetPrimaryColors.green, strokeColor || null];\n};","map":{"version":3,"names":["presetPrimaryColors","warning","validProgress","progress","getSuccessPercent","_ref","success","successPercent","percent","process","env","NODE_ENV","getPercentage","_ref2","realSuccessPercent","getStrokeColor","_ref3","strokeColor","successColor","green"],"sources":["C:/Users/Ronald/Desktop/Frontend/blog/myblog/node_modules/antd/es/progress/utils.js"],"sourcesContent":["import { presetPrimaryColors } from '@ant-design/colors';\r\nimport warning from '../_util/warning';\r\nexport function validProgress(progress) {\r\n  if (!progress || progress < 0) {\r\n    return 0;\r\n  }\r\n  if (progress > 100) {\r\n    return 100;\r\n  }\r\n  return progress;\r\n}\r\nexport function getSuccessPercent(_ref) {\r\n  let {\r\n    success,\r\n    successPercent\r\n  } = _ref;\r\n  let percent = successPercent;\r\n  /** @deprecated Use `percent` instead */\r\n  if (success && 'progress' in success) {\r\n    process.env.NODE_ENV !== \"production\" ? warning(false, 'Progress', '`success.progress` is deprecated. Please use `success.percent` instead.') : void 0;\r\n    percent = success.progress;\r\n  }\r\n  if (success && 'percent' in success) {\r\n    percent = success.percent;\r\n  }\r\n  return percent;\r\n}\r\nexport const getPercentage = _ref2 => {\r\n  let {\r\n    percent,\r\n    success,\r\n    successPercent\r\n  } = _ref2;\r\n  const realSuccessPercent = validProgress(getSuccessPercent({\r\n    success,\r\n    successPercent\r\n  }));\r\n  return [realSuccessPercent, validProgress(validProgress(percent) - realSuccessPercent)];\r\n};\r\nexport const getStrokeColor = _ref3 => {\r\n  let {\r\n    success = {},\r\n    strokeColor\r\n  } = _ref3;\r\n  const {\r\n    strokeColor: successColor\r\n  } = success;\r\n  return [successColor || presetPrimaryColors.green, strokeColor || null];\r\n};"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,oBAAoB;AACxD,OAAOC,OAAO,MAAM,kBAAkB;AACtC,OAAO,SAASC,aAAa,CAACC,QAAQ,EAAE;EACtC,IAAI,CAACA,QAAQ,IAAIA,QAAQ,GAAG,CAAC,EAAE;IAC7B,OAAO,CAAC;EACV;EACA,IAAIA,QAAQ,GAAG,GAAG,EAAE;IAClB,OAAO,GAAG;EACZ;EACA,OAAOA,QAAQ;AACjB;AACA,OAAO,SAASC,iBAAiB,CAACC,IAAI,EAAE;EACtC,IACEC,OAAO,GAELD,IAAI,CAFNC,OAAO;IACPC,cAAc,GACZF,IAAI,CADNE,cAAc;EAEhB,IAAIC,OAAO,GAAGD,cAAc;EAC5B;EACA,IAAID,OAAO,IAAI,UAAU,IAAIA,OAAO,EAAE;IACpCG,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAGV,OAAO,CAAC,KAAK,EAAE,UAAU,EAAE,yEAAyE,CAAC,GAAG,KAAK,CAAC;IACtJO,OAAO,GAAGF,OAAO,CAACH,QAAQ;EAC5B;EACA,IAAIG,OAAO,IAAI,SAAS,IAAIA,OAAO,EAAE;IACnCE,OAAO,GAAGF,OAAO,CAACE,OAAO;EAC3B;EACA,OAAOA,OAAO;AAChB;AACA,OAAO,IAAMI,aAAa,GAAG,SAAhBA,aAAa,CAAGC,KAAK,EAAI;EACpC,IACEL,OAAO,GAGLK,KAAK,CAHPL,OAAO;IACPF,OAAO,GAELO,KAAK,CAFPP,OAAO;IACPC,cAAc,GACZM,KAAK,CADPN,cAAc;EAEhB,IAAMO,kBAAkB,GAAGZ,aAAa,CAACE,iBAAiB,CAAC;IACzDE,OAAO,EAAPA,OAAO;IACPC,cAAc,EAAdA;EACF,CAAC,CAAC,CAAC;EACH,OAAO,CAACO,kBAAkB,EAAEZ,aAAa,CAACA,aAAa,CAACM,OAAO,CAAC,GAAGM,kBAAkB,CAAC,CAAC;AACzF,CAAC;AACD,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAGC,KAAK,EAAI;EACrC,oBAGIA,KAAK,CAFPV,OAAO;IAAPA,OAAO,8BAAG,CAAC,CAAC;IACZW,WAAW,GACTD,KAAK,CADPC,WAAW;EAEb,IACeC,YAAY,GACvBZ,OAAO,CADTW,WAAW;EAEb,OAAO,CAACC,YAAY,IAAIlB,mBAAmB,CAACmB,KAAK,EAAEF,WAAW,IAAI,IAAI,CAAC;AACzE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}